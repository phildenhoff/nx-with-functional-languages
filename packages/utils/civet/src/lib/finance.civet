export type TMoney = {
  amount: number;
  currency: string;
  toString: () => string;
}
export enum Currency
  CAD = 'CAD'
  USD = 'USD'

export Money := {
  new: function (amount: number, currency: Currency): TMoney {
    return {
      amount,
      currency,
      toString: () => {
        return amount + ' ' + currency;
      }
    };
  }
  sum: function (list: TMoney[]): TMoney
    firstCurrency := list[0].currency

    mismatchedCurrencies := list.filter(function (money) {
      return money.currency !== firstCurrency;
    });

    if (mismatchedCurrencies.length > 0) {
      throw new Error('Currencies do not match. Expected ' + firstCurrency + ' but got ' + mismatchedCurrencies[0].currency);
    }
    
    newAmount := list.reduce(function (acc, item) {
      acc + item.amount
    }, 0);

    return {
      amount: newAmount,
      currency: firstCurrency,
      toString: () => {
        return newAmount + ' ' + firstCurrency;
      }
    };
}
